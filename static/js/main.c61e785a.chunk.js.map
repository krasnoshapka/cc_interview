{"version":3,"sources":["context/packageContext.tsx","utils/convertToSKU.ts","utils/api.ts","components/PackageForm.tsx","components/PackageListItem.tsx","components/PackageList.tsx","components/PackageOrder.tsx","App.tsx","index.tsx"],"names":["PackageContext","React","createContext","PackageProvider","children","useState","packages","setPackages","Provider","value","loadPackages","convertToSKU","amount","cents","split","length","unshift","push","join","link","createHttpLink","uri","credentials","headers","client","ApolloClient","cache","InMemoryCache","convertItemsToPackages","items","map","item","packageId","parseInt","id","quantity","parseFloat","price","defaultPackage","PackageForm","formType","p","useContext","formData","setFormData","addPackageToCart","useMutation","gql","data","loading","error","a","variables","sku","console","log","graphQLErrors","useAddPackageToCartMutation","updatePackageInCart","useUpdatePackageInCartMutation","handleForm","e","currentTarget","Fragment","onSubmit","preventDefault","newP","then","handleSavePackage","className","htmlFor","type","min","max","onChange","Math","round","PackageListItem","index","PackageList","useQuery","onCompleted","cart","useCartQuery","PackageOrder","Client","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAEaA,EAAiBC,IAAMC,cAAyC,MAgB9DC,EAdoC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,SAAc,EAClCH,IAAMI,SAAqB,IADO,mBAC3DC,EAD2D,KACjDC,EADiD,KAOlE,OACE,cAACP,EAAeQ,SAAhB,CAAyBC,MAAO,CAAEH,WAAUI,aALzB,SAACJ,GACpBC,EAAYD,KAIZ,SACGF,K,yCCbQ,SAASO,EAAaC,GAEnC,IADA,IAAIC,EAAQ,UAAGD,GAASE,MAAM,IACvBD,EAAME,OAAS,GACpBF,EAAMG,QAAQ,KAIhB,OAFAH,EAAMI,KAAK,IAAK,KAET,OAASJ,EAAMK,KAAK,I,w5BCF7B,IAAMC,EAAOC,yBAAe,CAC1BC,IAAK,uCACLC,YAAa,UACbC,QAAS,CACP,UAAW,OAQAC,EAJA,IAAIC,eAAa,CAC9BN,OACAO,MAAO,IAAIC,kBAIb,SAASC,EAAuBC,GAE9B,OAAOA,EAAMC,KAAI,SAACC,GAChB,MAAO,CACLC,UAAWC,SAASF,EAAKG,IACzBC,SAAUF,SAASF,EAAKI,UACxBvB,OAAQwB,WAAWL,EAAKM,WChB9B,IAAMC,EAAiB,CACrBN,UAAW,EACXG,SAAU,EACVvB,OAAQ,GA2DK2B,EAxDiC,SAAC,GAAgE,IAA/DC,EAA8D,EAA9DA,SAA8D,IAApDC,SAAoD,MAAhDH,EAAgD,qCAC7ErC,IAAMyC,WAAW1C,IAA3CM,EADuG,EACvGA,SAAUI,EAD6F,EAC7FA,aAD6F,EAE9ET,IAAMI,SAASoC,GAF+D,mBAEvGE,EAFuG,KAE7FC,EAF6F,KAGvGC,EDYF,WAAwC,IAAD,EACOC,sBAAYC,cAAA,MADnB,mBACrCF,EADqC,YAClBG,EADkB,EAClBA,KAAMC,EADY,EACZA,QAASC,EADG,EACHA,MA8BzC,MAAO,CAACL,iBAlBoB,uCAAG,WAAOJ,GAAP,iBAAAU,EAAA,+EAMjBN,EAAiB,CAACO,UAAW,CACrCC,IAAK1C,EAAa8B,EAAE7B,QACpBuB,SAAUM,EAAEN,YARa,uBAIHN,EAJG,EAGzBmB,KACEH,iBAAoBhB,MAJG,kBAWpBD,EAAuBC,IAXH,gCAa3ByB,QAAQC,IAAI,KAAMC,eAbS,iCAetB,IAfsB,yDAAH,sDAkBsBR,OAAMC,UAASC,SC3CtCO,GAApBZ,iBACAa,EDuEF,WAA2C,IAAD,EACOZ,sBAAYC,cAAA,MADnB,mBACxCW,EADwC,YAClBV,EADkB,EAClBA,KAAMC,EADY,EACZA,QAASC,EADG,EACHA,MA8B5C,MAAO,CAACQ,oBAlBuB,uCAAG,WAAOjB,GAAP,iBAAAU,EAAA,+EAMpBO,EAAoB,CAACN,UAAW,CACxClB,GAAG,GAAD,OAAKO,EAAET,WACTG,SAAUM,EAAEN,YARgB,uBAIHN,EAJG,EAG5BmB,KACEU,oBAAuB7B,MAJG,kBAWvBD,EAAuBC,IAXA,gCAa9ByB,QAAQC,IAAI,KAAMC,eAbY,iCAezB,IAfyB,yDAAH,sDAkByBR,OAAMC,UAASC,SCtGzCS,GAAvBD,oBAEDE,EAAa,SAACC,GAClBjB,EAAY,2BACPD,GADM,kBAERkB,EAAEC,cAAc5B,GAAK2B,EAAEC,cAAcrD,UAyB1C,OACE,eAAC,IAAMsD,SAAP,WACgB,QAAbvB,GAAuB,0CAAalC,EAASS,OAAS,KACvD,uBAAMiD,SAAU,SAACH,GAAD,OAxBM,SAACA,EAAoBlB,GAC7CkB,EAAEI,iBAEF,IAAMC,EAAiB,CACrBlC,UAAWW,EAASX,UACpBpB,OAAQqB,SAASU,EAAS/B,QAC1BuB,SAAUF,SAASU,EAASR,WAGb,QAAbK,EACFK,EAAiBqB,GAAMC,MAAK,SAAC7D,GAC3BI,EAAaJ,GACbsC,EAAYN,MAGdoB,EAAoBQ,GAAMC,MAAK,SAAC7D,GAC9BI,EAAaJ,MAQQ8D,CAAkBP,EAAGlB,IAAW0B,UAAU,eAAjE,UACE,gCACE,uBAAOC,QAAQ,WAAf,uBACA,uBAAOpC,GAAG,WAAWqC,KAAK,SAASC,IAAI,IAAIC,IAAI,KAAKhE,MAAOkC,EAASR,SAAUuC,SAAUd,OAE1F,gCACE,uBAAOU,QAAQ,SAAf,8BACA,uBAAOpC,GAAG,SAASqC,KAAK,SAASC,IAAI,IAAIC,IAAI,MAAMhE,MAAOkE,KAAKC,MAAMjC,EAAS/B,QAAS8D,SAAUd,OAEnG,8BACE,mCACgB,QAAbpB,EAAqB,MAAQ,OADhC,uBCtDGqC,EAAkD,SAAC,GAAgD,IAA/CpC,EAA8C,EAA9CA,EAAGqC,EAA2C,EAA3CA,MAA2C,6BAC7G,OACE,sBAAKT,UAAU,oBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,qBAAwCS,EAAQ,KAChD,sBAAKT,UAAU,mBAAf,uBAA6C5B,EAAEN,YAC/C,sBAAKkC,UAAU,iBAAf,4BAA2C5B,EAAE7B,aAE/C,sBAAKyD,UAAU,iBAAf,UACE,uCACA,cAAC,EAAD,CAAa7B,SAAS,SAASC,EAAGA,WCE3BsC,MAff,WAAwB,IACfzE,EAAYL,IAAMyC,WAAW1C,GAA7BM,SADc,EH2DhB,WAAyB,IACvBI,EAAgBT,IAAMyC,WAAW1C,GAAjCU,aADsB,EAEEsE,mBAASjC,cAAA,KAerC,CACDkC,YAAa,SAACjC,GACZtC,EAAakB,EAAuBoB,EAAKkC,KAAKrD,WAIlD,MAAO,CAACmB,KAvBqB,EAEtBA,KAqBOC,QAvBe,EAEhBA,QAqBUC,MAvBM,EAEPA,OG3DGiC,GAAlBlC,EAFc,EAEdA,QAGP,OALqB,EAELC,MAId,sBAAKmB,UAAU,eAAf,UACGpB,GAAY,qBAAKoB,UAAU,UAAf,iCACZ/D,GAAYA,EAASwB,KAAI,SAACW,EAAGqC,GAAJ,OACxB,cAAC,EAAD,CAAmCrC,EAAGA,EAAGqC,MAAOA,GAA1BrC,EAAET,kBCMjBoD,MAbf,WACE,OACE,cAAC,iBAAD,CAAgB5D,OAAQ6D,EAAxB,SACE,cAAC,EAAD,UACE,sBAAKhB,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAa7B,SAAS,gBCCjB8C,MAXf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,kDAEF,cAAC,EAAD,QCJNkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c61e785a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const PackageContext = React.createContext<PackageContextType | null>(null);\r\n\r\nconst PackageProvider: React.FC<React.ReactNode> = ({ children}) => {\r\n  const [packages, setPackages] = React.useState<IPackage[]>([]);\r\n\r\n  const loadPackages = (packages: IPackage[]) => {\r\n    setPackages(packages);\r\n  };\r\n\r\n  return (\r\n    <PackageContext.Provider value={{ packages, loadPackages }}>\r\n      {children}\r\n    </PackageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default PackageProvider;\r\n","export default function convertToSKU(amount: number): string {\r\n  let cents = `${amount}`.split('');\r\n  while (cents.length < 3) {\r\n    cents.unshift('0');\r\n  }\r\n  cents.push('0', '0');\r\n\r\n  return 'LECA' + cents.join('');\r\n}\r\n","import {ApolloClient, InMemoryCache, createHttpLink, gql, useMutation, useQuery} from '@apollo/client';\r\nimport convertToSKU from \"../utils/convertToSKU\";\r\nimport React from \"react\";\r\nimport {PackageContext} from \"../context/packageContext\";\r\n\r\nconst link = createHttpLink({\r\n  uri: 'https://staging.nxte.nl:5000/graphql',\r\n  credentials: 'include',\r\n  headers: {\r\n    'x-store': '7'\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache()\r\n});\r\nexport default client;\r\n\r\nfunction convertItemsToPackages(items: []): IPackage[] {\r\n  // TODO: implement better type validation here\r\n  return items.map((item: any): IPackage => {\r\n    return {\r\n      packageId: parseInt(item.id),\r\n      quantity: parseInt(item.quantity),\r\n      amount: parseFloat(item.price)\r\n    }\r\n  });\r\n}\r\n\r\nexport function useAddPackageToCartMutation() {\r\n  const [addPackageToCart, {data, loading, error}] = useMutation(gql`\r\n    mutation addPackageToCart($sku:SKU!, $quantity: Int!) {\r\n      addPackageToCart(sku: $sku, quantity: $quantity, personalMessage: false) {\r\n        items {\r\n          id,\r\n          quantity,\r\n          price\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const handleAddPackageToCart = async (p: IPackage) => {\r\n    try {\r\n      const {\r\n        data: {\r\n          addPackageToCart: { items }\r\n        }\r\n      } = await addPackageToCart({variables: {\r\n        sku: convertToSKU(p.amount),\r\n        quantity: p.quantity\r\n      }});\r\n\r\n      return convertItemsToPackages(items);\r\n    } catch (error) {\r\n      console.log(error.graphQLErrors);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  return {addPackageToCart: handleAddPackageToCart, data, loading, error };\r\n}\r\n\r\nexport function useCartQuery() {\r\n  const {loadPackages} = React.useContext(PackageContext) as PackageContextType;\r\n  const {data, loading, error} = useQuery(gql`\r\n    query Cart {\r\n      cart {\r\n        id,\r\n        items {\r\n          id,\r\n          quantity\r\n          variant {\r\n            id,\r\n            sku\r\n          },\r\n          price \r\n        }\r\n      }\r\n    }\r\n  `, {\r\n    onCompleted: (data) => {\r\n      loadPackages(convertItemsToPackages(data.cart.items));\r\n    }\r\n  });\r\n\r\n  return {data, loading, error };\r\n}\r\n\r\nexport function useUpdatePackageInCartMutation() {\r\n  const [updatePackageInCart, {data, loading, error}] = useMutation(gql`\r\n    mutation updatePackageInCart($id:ID!, $quantity: Int!) {\r\n      updatePackageInCart(cartItemId: $id, quantity: $quantity, personalMessage: false) {\r\n        items {\r\n          id,\r\n          quantity,\r\n          price\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const handleUpdatePackageInCart = async (p: IPackage) => {\r\n    try {\r\n      const {\r\n        data: {\r\n          updatePackageInCart: { items }\r\n        }\r\n      } = await updatePackageInCart({variables: {\r\n        id: `${p.packageId}`,\r\n        quantity: p.quantity\r\n      }});\r\n\r\n      return convertItemsToPackages(items);\r\n    } catch (error) {\r\n      console.log(error.graphQLErrors);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  return {updatePackageInCart: handleUpdatePackageInCart, data, loading, error };\r\n}\r\n\r\n","import React from 'react';\r\nimport {PackageContext} from '../context/packageContext';\r\nimport {useAddPackageToCartMutation, useUpdatePackageInCartMutation} from '../utils/api';\r\n\r\nexport interface PackageFormProps extends React.ComponentPropsWithoutRef<\"form\"> {\r\n  formType: 'add' | 'modify';\r\n  p?: IPackage;\r\n}\r\n\r\nconst defaultPackage = {\r\n  packageId: 0,\r\n  quantity: 1,\r\n  amount: 5\r\n};\r\n\r\nconst PackageForm: React.FC<PackageFormProps> = ({formType, p = defaultPackage, ...props}: PackageFormProps) => {\r\n  const {packages, loadPackages} = React.useContext(PackageContext) as PackageContextType;\r\n  const [formData, setFormData] = React.useState(p);\r\n  const {addPackageToCart} = useAddPackageToCartMutation();\r\n  const {updatePackageInCart} = useUpdatePackageInCartMutation();\r\n\r\n  const handleForm = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.currentTarget.id]: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  const handleSavePackage = (e: React.FormEvent, formData: IPackage | any) => {\r\n    e.preventDefault();\r\n    // TODO: implement better form data validation here\r\n    const newP: IPackage = {\r\n      packageId: formData.packageId,\r\n      amount: parseInt(formData.amount),\r\n      quantity: parseInt(formData.quantity)\r\n    }\r\n\r\n    if (formType === 'add') {\r\n      addPackageToCart(newP).then((packages) => {\r\n        loadPackages(packages);\r\n        setFormData(defaultPackage);\r\n      });\r\n    } else {\r\n      updatePackageInCart(newP).then((packages) => {\r\n        loadPackages(packages);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {formType === 'add' && (<h2>Package {packages.length + 1}</h2>)}\r\n      <form onSubmit={(e) => handleSavePackage(e, formData)} className=\"package-form\">\r\n        <div>\r\n          <label htmlFor='quantity'>Quantity:</label>\r\n          <input id=\"quantity\" type=\"number\" min=\"1\" max=\"10\" value={formData.quantity} onChange={handleForm} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='amount'>Amount (€):</label>\r\n          <input id=\"amount\" type=\"number\" min=\"5\" max=\"150\" value={Math.round(formData.amount)} onChange={handleForm} />\r\n        </div>\r\n        <div>\r\n          <button>\r\n            {formType === 'add' ? 'Add' : 'Save'} Package\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PackageForm;","import React from 'react';\r\nimport PackageForm from \"./PackageForm\";\r\n\r\nexport interface PackageListItemProps extends React.ComponentPropsWithoutRef<\"div\"> {\r\n  p: IPackage;\r\n  index: number;\r\n}\r\n\r\nexport const PackageListItem: React.FC<PackageListItemProps> = ({p, index, ...props}: PackageListItemProps) => {\r\n  return (\r\n    <div className='package-list-item'>\r\n      <div className='package-details'>\r\n        <div className=\"package-title\">Package {index + 1}</div>\r\n        <div className=\"package-quantity\">Quantity: {p.quantity}</div>\r\n        <div className=\"package-amount\">Amount: € {p.amount}</div>\r\n      </div>\r\n      <div className=\"package-modify\">\r\n        <b>Modify</b>\r\n        <PackageForm formType=\"modify\" p={p} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {PackageListItem} from \"./PackageListItem\";\r\nimport {PackageContext} from \"../context/packageContext\";\r\nimport {useCartQuery} from \"../utils/api\";\r\n\r\nfunction PackageList() {\r\n  const {packages} = React.useContext(PackageContext) as PackageContextType;\r\n  const {loading, error} = useCartQuery();\r\n  // TODO: handle and display query errors here\r\n\r\n  return (\r\n    <div className=\"package-list\">\r\n      {loading && (<div className=\"loading\">Loading packages...</div>)}\r\n      {packages && packages.map((p, index) =>\r\n        <PackageListItem key={p.packageId} p={p} index={index} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageList;\r\n","import React from 'react';\r\nimport PackageList from \"./PackageList\";\r\nimport PackageForm from \"./PackageForm\";\r\nimport PackageProvider from \"../context/packageContext\";\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport Client from '../utils/api';\r\n\r\nfunction PackageOrder() {\r\n  return (\r\n    <ApolloProvider client={Client}>\r\n      <PackageProvider>\r\n        <div className=\"package-order\">\r\n          <PackageList />\r\n          <PackageForm formType=\"add\" />\r\n        </div>\r\n      </PackageProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default PackageOrder;\r\n","import React from 'react';\nimport PackageOrder from './components/PackageOrder';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Giftcard order</h1>\n      </header>\n      <PackageOrder />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}