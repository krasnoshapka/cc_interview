{"version":3,"sources":["context/packageContext.tsx","utils/convertToSKU.ts","utils/api.ts","components/PackageForm.tsx","components/PackageListItem.tsx","components/PackageList.tsx","components/PackageOrder.tsx","App.tsx","index.tsx"],"names":["PackageContext","React","createContext","PackageProvider","children","useState","packages","setPackages","Provider","value","modifyPackage","p","newPackages","index","findIndex","item","packageId","loadPackages","convertToSKU","amount","cents","split","length","unshift","push","join","link","createHttpLink","uri","credentials","headers","client","ApolloClient","cache","InMemoryCache","defaultPackage","quantity","PackageForm","formType","useContext","formData","setFormData","addPackageToCart","useMutation","gql","data","loading","error","a","variables","sku","items","map","id","price","console","log","graphQLErrors","useAddPackageToCartMutation","updatePackageInCart","useUpdatePackageInCartMutation","handleForm","e","currentTarget","Fragment","onSubmit","preventDefault","then","handleSavePackage","className","htmlFor","type","min","max","onChange","Math","round","PackageListItem","PackageList","useQuery","onCompleted","cart","useCartQuery","PackageOrder","Client","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2d4a010.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const PackageContext = React.createContext<PackageContextType | null>(null);\r\n\r\nconst PackageProvider: React.FC<React.ReactNode> = ({ children}) => {\r\n  const [packages, setPackages] = React.useState<IPackage[]>([]);\r\n\r\n  const modifyPackage = (p: IPackage) => {\r\n    const newPackages = [...packages];\r\n    const index: number = newPackages.findIndex((item) => item.packageId === p.packageId );\r\n    newPackages[index] = p;\r\n    setPackages(newPackages);\r\n  };\r\n\r\n  const loadPackages = (packages: IPackage[]) => {\r\n    setPackages(packages);\r\n  };\r\n\r\n  return (\r\n    <PackageContext.Provider value={{ packages, modifyPackage, loadPackages }}>\r\n      {children}\r\n    </PackageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default PackageProvider;\r\n","export default function convertToSKU(amount: number): string {\r\n  let cents = `${amount}`.split('');\r\n  while (cents.length < 3) {\r\n    cents.unshift('0');\r\n  }\r\n  cents.push('0', '0');\r\n\r\n  return 'LECA' + cents.join('');\r\n}\r\n","import {ApolloClient, InMemoryCache, createHttpLink, gql, useMutation, useQuery} from '@apollo/client';\r\nimport convertToSKU from \"../utils/convertToSKU\";\r\nimport React from \"react\";\r\nimport {PackageContext} from \"../context/packageContext\";\r\n\r\nconst link = createHttpLink({\r\n  uri: 'https://staging.nxte.nl:5000/graphql',\r\n  credentials: 'include',\r\n  headers: {\r\n    'x-store': '7'\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache()\r\n});\r\nexport default client;\r\n\r\nexport function useAddPackageToCartMutation() {\r\n  const [addPackageToCart, {data, loading, error}] = useMutation(gql`\r\n    mutation addPackageToCart($sku:SKU!, $quantity: Int!) {\r\n      addPackageToCart(sku: $sku, quantity: $quantity, personalMessage: false) {\r\n        items {\r\n          id,\r\n          quantity,\r\n          price\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const handleAddPackageToCart = async (p: IPackage) => {\r\n    try {\r\n      const {\r\n        data: {\r\n          addPackageToCart: { items }\r\n        }\r\n      } = await addPackageToCart({variables: {\r\n        sku: convertToSKU(p.amount),\r\n        quantity: p.quantity\r\n      }});\r\n\r\n      return items.map((item: any): IPackage => {\r\n        // TODO: implement better type validation here\r\n        return {\r\n          packageId: item.id,\r\n          amount: item.price,\r\n          quantity: item.quantity\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error.graphQLErrors);\r\n    }\r\n  };\r\n\r\n  return {addPackageToCart: handleAddPackageToCart, data, loading, error };\r\n}\r\n\r\nexport function useCartQuery() {\r\n  const {loadPackages} = React.useContext(PackageContext) as PackageContextType;\r\n  const {data, loading, error} = useQuery(gql`\r\n    query Cart {\r\n      cart {\r\n        id,\r\n        items {\r\n          id,\r\n          quantity\r\n          variant {\r\n            id,\r\n            sku\r\n          },\r\n          price \r\n        }\r\n      }\r\n    }\r\n  `, {\r\n    onCompleted: (data) => {\r\n      loadPackages(data.cart.items.map((item: any): IPackage => {\r\n        // TODO: implement better type validation here\r\n        return {\r\n          packageId: item.id,\r\n          quantity: item.quantity,\r\n          amount: item.price\r\n        }\r\n      }));\r\n    }\r\n  });\r\n\r\n  return {data, loading, error };\r\n}\r\n\r\nexport function useUpdatePackageInCartMutation() {\r\n  const [updatePackageInCart, {data, loading, error}] = useMutation(gql`\r\n    mutation updatePackageInCart($id:ID!, $quantity: Int!) {\r\n      updatePackageInCart(cartItemId: $id, personalMessage:false, quantity: $quantity) {\r\n        id\r\n      }\r\n    }\r\n  `);\r\n\r\n  const handleUpdatePackageInCart = async (p: IPackage) => {\r\n    try {\r\n      const {\r\n        data: {\r\n          updatePackageInCart: { id }\r\n        }\r\n      } = await updatePackageInCart({variables: {\r\n        id: p.packageId,\r\n        quantity: p.quantity\r\n      }});\r\n\r\n      return id;\r\n    } catch (error) {\r\n      console.log(error.graphQLErrors);\r\n    }\r\n  };\r\n\r\n  return {updatePackageInCart: handleUpdatePackageInCart, data, loading, error };\r\n}\r\n\r\n","import React from 'react';\r\nimport {PackageContext} from '../context/packageContext';\r\nimport {useAddPackageToCartMutation, useUpdatePackageInCartMutation} from '../utils/api';\r\n\r\nexport interface PackageFormProps extends React.ComponentPropsWithoutRef<\"form\"> {\r\n  formType: 'add' | 'modify';\r\n  p?: IPackage;\r\n}\r\n\r\nconst defaultPackage = {\r\n  packageId: 0,\r\n  quantity: 1,\r\n  amount: 5\r\n};\r\n\r\nconst PackageForm: React.FC<PackageFormProps> = ({formType, p = defaultPackage, ...props}: PackageFormProps) => {\r\n  const {packages, loadPackages, modifyPackage} = React.useContext(PackageContext) as PackageContextType;\r\n  const [formData, setFormData] = React.useState<IPackage>(p);\r\n  const {addPackageToCart} = useAddPackageToCartMutation();\r\n  const {updatePackageInCart} = useUpdatePackageInCartMutation();\r\n\r\n  const handleForm = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.currentTarget.id]: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  const handleSavePackage = (e: React.FormEvent, formData: IPackage | any) => {\r\n    e.preventDefault();\r\n    // TODO: implement better form data validation here\r\n\r\n    if (formType === 'add') {\r\n      addPackageToCart(formData).then((packages) => {\r\n        loadPackages(packages);\r\n        setFormData(defaultPackage);\r\n      });\r\n    } else {\r\n      updatePackageInCart(formData).then((id) => {\r\n        modifyPackage(formData);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {formType === 'add' && (<h2>Package {packages.length + 1}</h2>)}\r\n      <form onSubmit={(e) => handleSavePackage(e, formData)} className=\"package-form\">\r\n        <div>\r\n          <label htmlFor='quantity'>Quantity:</label>\r\n          <input id=\"quantity\" type=\"number\" min=\"1\" max=\"10\" value={formData.quantity} onChange={handleForm} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='amount'>Amount:</label>\r\n          <input id=\"amount\" type=\"number\" min=\"5\" max=\"150\" value={Math.round(formData.amount)} onChange={handleForm} />\r\n        </div>\r\n        <div>\r\n          <button>\r\n            {formType === 'add' ? 'Add' : 'Save'} Package\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PackageForm;","import React from 'react';\r\nimport PackageForm from \"./PackageForm\";\r\n\r\nexport interface PackageListItemProps extends React.ComponentPropsWithoutRef<\"div\"> {\r\n  p: IPackage;\r\n  index: number;\r\n}\r\n\r\nexport const PackageListItem: React.FC<PackageListItemProps> = ({p, index, ...props}: PackageListItemProps) => {\r\n  return (\r\n    <div className='package-list-item'>\r\n      <div className='package-details'>\r\n        <div className=\"package-title\">Package {index + 1}</div>\r\n        <div className=\"package-quantity\">Quantity: {p.quantity}</div>\r\n        <div className=\"package-amount\">Amount: {p.amount}</div>\r\n      </div>\r\n      <div className=\"package-modify\">\r\n        <b>Modify</b>\r\n        <PackageForm formType=\"modify\" p={p} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {PackageListItem} from \"./PackageListItem\";\r\nimport {PackageContext} from \"../context/packageContext\";\r\nimport {useCartQuery} from \"../utils/api\";\r\n\r\nfunction PackageList() {\r\n  const {packages} = React.useContext(PackageContext) as PackageContextType;\r\n  const {loading, error} = useCartQuery();\r\n  // TODO: handle and display query errors here\r\n\r\n  return (\r\n    <div className=\"package-list\">\r\n      {loading && (<div className=\"loading\">Loading packages...</div>)}\r\n      {packages && packages.map((p, index) =>\r\n        <PackageListItem key={p.packageId} p={p} index={index} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageList;\r\n","import React from 'react';\r\nimport PackageList from \"./PackageList\";\r\nimport PackageForm from \"./PackageForm\";\r\nimport PackageProvider from \"../context/packageContext\";\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport Client from '../utils/api';\r\n\r\nfunction PackageOrder() {\r\n  return (\r\n    <ApolloProvider client={Client}>\r\n      <PackageProvider>\r\n        <div className=\"package-order\">\r\n          <PackageList />\r\n          <PackageForm formType=\"add\" />\r\n        </div>\r\n      </PackageProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default PackageOrder;\r\n","import React from 'react';\nimport PackageOrder from './components/PackageOrder';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Giftcard order</h1>\n      </header>\n      <PackageOrder />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}